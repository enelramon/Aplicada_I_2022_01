@page "/Ocupacion"
@page "/Ocupacion/{OcupacionId:int}"

@* mala idea..... inyectar el contexto aqui *@
@inject Contexto _contexto;

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Ocupaciones</h3>
        </div>
        <div class="card-body">

            <div class="form-group">
                <label>Descripcion</label>
                <InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Descripcion)" />
            </div>

            <div class="form-group">
                <label>Salario</label>
                <InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Salario)" />
            </div>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>

        </div>
    </div>
</EditForm>
@code {

    [Parameter]
    public int OcupacionId { get; set; }

    public Ocupaciones ocupacion { get; set; }= new Ocupaciones();

    private OcupacionesBLL ocupacionesBLL;

    protected override void OnInitialized()
    {
        base.OnInitialized();
         ocupacionesBLL = new OcupacionesBLL(_contexto);
    }

    private void Nuevo()
    {
        ocupacion = new Ocupaciones();
    }

    private void Buscar()
    {
        if (ocupacion.OcupacionId > 0)
        {
              var encontrado = ocupacionesBLL.Buscar(ocupacion.OcupacionId);
            Nuevo();
            if (encontrado != null)
                this.ocupacion = encontrado;
            else
            {
                // toast.ShowWarning($"No se ha encontrado la tarea con el id ingresado");
            }  

        }
    }

    public void Guardar()
    {
        var guardado = ocupacionesBLL.Guardar(ocupacion);

        if (guardado)
        {
            Nuevo();
            // toast.ShowInfo("La tarea se guardo correctamente");
        }
        else
        {
            // toast.ShowWarning("La tarea no se guardo");
        }

    }

    public void Eliminar()
    {
        bool eliminado;

        eliminado = false; //ocupacionesBLL.Eliminar(ocupacion.OcupacionId);

        if (eliminado)
        {
            Nuevo();
            //toast.ShowInfo("La tarea se elimino correctamente");
        }
        else
        {
            //toast.ShowWarning("La tarea no se elimino");
        }

    }

}
